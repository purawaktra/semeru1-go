@startuml
'https://plantuml.com/sequence-diagram

participant Router
participant RequestHandler as rh
participant Controller as ctrl
participant Function as func
participant UseCase as uc
participant Repository as repo

Router -> rh : SelectCityById(context)
Router -> rh : SelectCityByName(context)
Router -> rh : SelectAllCity(context)
Router -> rh : SelectProvinceById(context)
Router -> rh : SelectAllProvince(context)
rh -> func : ValidateRequestId(header)
func --> rh : nil
func x--> rh : error
rh x--> Router : 400, error response
rh -> ctrl : SelectCityById(request)
rh -> ctrl : SelectCityByName(request)
rh -> ctrl : SelectAllCity(request)
rh -> ctrl : SelectProvinceById(request)
rh -> ctrl : SelectAllProvince(request)
ctrl -> func : BindAndValidate(payload)
func --> ctrl : dto, nil
func x--> ctrl : nil, error
ctrl x--> rh : response, error
rh x--> Router : 400, error response
ctrl -> uc : SelectTableCityById(dto)
uc -> repo : SelectTableCityById(entity)
ctrl -> uc : SelectTableCityByName(dto)
uc -> repo : SelectTableCityByName(entity)
ctrl -> uc : SelectAllCity(dto)
uc -> repo : SelectAllCity(entity)
repo --> uc : city, nil
uc --> ctrl : city, nil
ctrl --> rh : response, nil
rh --> Router : 200, OK response
repo x--> uc : nil, error
uc x--> ctrl : nil, error
ctrl x--> rh : response, error
rh x--> Router : 400, error response
ctrl -> uc : SelectTableProvinceById(dto)
uc -> repo : SelectTableProvinceById(entity)
ctrl -> uc : SelectAllProvince(dto)
uc -> repo : SelectAllProvince(entity)
repo --> uc : province, nil
uc --> ctrl : province, nil
ctrl --> rh : response, nil
rh --> Router : 200, OK response
repo x--> uc : nil, error
uc x--> ctrl : nil, error
ctrl x--> rh : response, error
rh x--> Router : 400, error response

@enduml
